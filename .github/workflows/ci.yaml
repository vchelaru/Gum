name: Build All

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  list-solutions:
    runs-on: windows-latest
    outputs:
      solutions: ${{ steps.set-solutions.outputs.solutions }}
    steps:
    - uses: actions/checkout@v4
      continue-on-error: false

    - name: List Solutions
      id: set-solutions
      run: |
        #$exclude = @("GumTest") # Define exclusion list here
        $solutions = Get-ChildItem -Path Samples -Recurse -Include *.sln | 
                     ForEach-Object { $_.BaseName } | 
                     Where-Object { $exclude -notcontains $_ } | 
                     Sort-Object | 
                     ConvertTo-Json -Compress
        echo "solutions=$solutions" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      shell: pwsh
      continue-on-error: false

    - name: Check for Failure
      if: failure()
      run: echo "Failed to list solutions" >&2

  build:
    needs: list-solutions
    runs-on: windows-latest
    name: build (${{ matrix.solution }}, ${{ matrix.dotnet-version }})
    strategy:
      matrix:
        dotnet-version: [ '6.0.x', '8.0.x' ]
        solution: ${{ fromJson(needs.list-solutions.outputs.solutions) }}
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      continue-on-error: false

    - name: Initialize Submodules
      run: git submodule update --init --recursive
      continue-on-error: false

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
      continue-on-error: false

    - name: Build Solution (${{ matrix.solution }})
      env:
        IsCIBuild: true
        DOTNET_TOOLS_ALLOW_MANIFEST_IN_ROOT: true
      run: |
        $solutionFile = (Get-ChildItem -Path Samples -Recurse -Include "${{ matrix.solution }}.sln").FullName
        dotnet restore "$solutionFile" -v q
        dotnet build "$solutionFile" --configuration Release --no-restore -nologo -v q --property WarningLevel=0 -clp:ErrorsOnly
      shell: pwsh
      continue-on-error: false

    - name: Check for Failure
      if: failure()
      run: echo "Failed to build ${{ matrix.solution }} with .NET ${{ matrix.dotnet-version }}" >&2