name: Build and Test

on:
  pull_request:
    branches: [master]

jobs:
  Build-and-Test:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.fsproj', '**/*.vbproj', '**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build Gum (Windows Only)
        if: runner.os == 'Windows'
        run: |
          dotnet restore "Gum.sln"
          dotnet build "Gum.sln" --configuration Release --no-restore --verbosity minimal -p:WarningLevel=0

      - name: Build AllLibraries
        run: |
          dotnet restore "AllLibraries.sln"
          dotnet build "AllLibraries.sln" --configuration Release --no-restore --verbosity minimal -p:WarningLevel=0

      - name: MonoGameGum.Tests
        run: dotnet test "MonoGameGum.Tests" --configuration Release --no-build --logger "trx" --results-directory "TestResults"
        continue-on-error: true

      - name: GumToolUnitTests (Windows Only)
        if: runner.os == 'Windows'
        run: dotnet test "Tool/Tests/GumToolUnitTests" --configuration Release --no-build --logger "trx" --results-directory "TestResults"
        continue-on-error: true

      - name: Publish Test Results
        uses: dorny/test-reporter@v2
        with:
          name: Tests ${{ matrix.os }}
          path: "TestResults/*.trx"
          reporter: dotnet-trx
          fail-on-error: true
