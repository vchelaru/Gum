<UserControl
    x:Class="StateAnimationPlugin.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:StateAnimationPlugin.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
    xmlns:themes="clr-namespace:Gum.Themes;assembly=Gum"
    xmlns:viewModels="clr-namespace:StateAnimationPlugin.ViewModels"
    xmlns:views="clr-namespace:StateAnimationPlugin.Views"
    xmlns:wpf="clr-namespace:FluentIcons.Wpf;assembly=FluentIcons.Wpf"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    d:DataContext="{d:DesignInstance {x:Type viewModels:ElementAnimationsViewModel},
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="580"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <themes:DesignOnlyDictionary Source="pack://application:,,,/Gum;component/Themes/Frb.Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="90" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <ToggleButton
                x:Name="PlayStopButton"
                Width="Auto"
                MinWidth="0"
                Padding="0"
                HorizontalAlignment="Right"
                BorderBrush="{DynamicResource Frb.Brushes.Border}"
                BorderThickness="1"
                IsChecked="{Binding IsPlaying}"
                Visibility="{Binding SelectedAnimation, Converter={StaticResource NullToVisibilityConverter}}">
                <ToggleButton.Style>
                    <Style BasedOn="{StaticResource IconButton}" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Error}" />
                        <Setter Property="Content" Value="{wpf:FluentIcon Icon=Stop, IconVariant=Filled}" />
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content" Value="{wpf:FluentIcon Icon=Play, IconVariant=Filled}" />
                                <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Primary}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource Darken}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Error}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Error}" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <TextBox
                    Grid.Row="1"
                    Grid.Column="0"
                    Text="{Binding DisplayedAnimationTime}" 
                    materialDesign:TextFieldAssist.SuffixText="{Binding OverLengthTime}" Margin="4,0"/>

            <!--<views:TimedStateMarkerDisplay Grid.Column="1"
                                               RangeMaximum="{Binding SelectedAnimation.Length}"
                                               MarkerItemSource="{Binding SelectedAnimation.Keyframes}"
                                               SelectedKeyframe="{Binding SelectedAnimation.SelectedKeyframe}" Grid.Row="1"/>-->

            <Border
                Grid.Row="0"
                Grid.Column="1"
                Margin="2,0,0,0"
                HorizontalAlignment="Left"
                BorderBrush="{DynamicResource Frb.Brushes.Border}"
                BorderThickness="1">
                <StackPanel VerticalAlignment="Stretch" Orientation="Horizontal">
                    <Button
                        Click="SpeedDecreaseClicked"
                        Content="{wpf:FluentIcon Icon=Subtract}"
                        Style="{StaticResource IconButton}">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold">Slow Down</TextBlock>
                                    <TextBlock>Reduces game speed (makes it run in slow-motion)</TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <wpf:FluentIcon
                        FontSize="{Binding Source={StaticResource Scale}, Path=H2}"
                        Foreground="{DynamicResource Frb.Brushes.Foreground}"
                        Icon="PersonRunning"
                        IconVariant="Filled" />
                    <TextBlock
                        MinWidth="40"
                        Margin="0,0,2,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding CurrentGameSpeed, FallbackValue=100%}"
                        TextAlignment="Center" />
                    <Button
                        Click="SpeedIncreaseClicked"
                        Content="{wpf:FluentIcon Icon=Add}"
                        Style="{StaticResource IconButton}">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock FontWeight="Bold">Speed Up</TextBlock>
                                    <TextBlock>Increases game speed (makes it run in fast-forward)</TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                </StackPanel>

            </Border>


        </Grid>

        <GridSplitter
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            ResizeBehavior="PreviousAndNext" />

        <Grid x:Name="BottomGrid" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border
                    Grid.Row="0"
                    Padding="4,0,0,0"
                    Background="{DynamicResource Frb.Brushes.Field.Background}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock VerticalAlignment="Center" Text="Animations" />
                        <Button
                            Grid.Column="1"
                            Click="AddAnimationButton_Click"
                            Content="{wpf:FluentIcon Icon=Add}"
                            Style="{StaticResource IconButton}" />
                    </Grid>
                </Border>
                <ListBox
                    Grid.Row="1"
                    ItemsSource="{Binding Animations}"
                    PreviewKeyDown="HandleAnimationListKeyPressed"
                    SelectedItem="{Binding SelectedAnimation}">
                    <ListBox.ContextMenu>
                        <ContextMenu x:Name="AnimationContextMenu" ItemsSource="{Binding AnimationRightClickItems}" />
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton IsChecked="{Binding Loops, Mode=TwoWay}">
                                    <ToggleButton.Style>
                                        <Style BasedOn="{StaticResource IconButton}" TargetType="ToggleButton">
                                            <Setter Property="Content" Value="{wpf:FluentIcon Icon=ArrowRight}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Content" Value="{wpf:FluentIcon Icon=ArrowRepeatAll}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="6,0,0,0"
                                    VerticalAlignment="Center"
                                    Text="{Binding Name}" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>

            <GridSplitter
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch"
                DragCompleted="GridSplitter_DragCompleted" />

            <Border
                Grid.Column="2"
                BorderBrush="{DynamicResource Frb.Brushes.Background}"
                BorderThickness="1,0,1,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Border
                        Grid.Row="0"
                        Padding="4,0,0,0"
                        Background="{DynamicResource Frb.Brushes.Field.Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock VerticalAlignment="Center" Text="{Binding SelectedAnimation.Name}" />
                            <Grid Grid.Column="1">
                                <ToggleButton
                                    x:Name="AddStateButton"
                                    Content="{wpf:FluentIcon Icon=Add}"
                                    IsChecked="{Binding IsOpen, ElementName=StateButtonMenu}"
                                    Style="{StaticResource IconButton}">
                                    <ToggleButton.ContextMenu>
                                        <ContextMenu x:Name="StateButtonMenu" HasDropShadow="True">
                                            <MenuItem Click="AddStateKeyframeButton_Click" Header="State" />
                                            <MenuItem Click="AddSubAnimationButton_Click" Header="Sub-Animation" />
                                            <MenuItem Click="AddNamedEventButton_Click" Header="Named Event" />
                                        </ContextMenu>
                                    </ToggleButton.ContextMenu>
                                </ToggleButton>

                            </Grid>

                        </Grid>
                    </Border>

                    <!--  State List Box  -->
                    <ListBox
                        Grid.Row="1"
                        ItemsSource="{Binding SelectedAnimation.Keyframes}"
                        KeyDown="HandleAnimationKeyframeListBoxKey"
                        SelectedItem="{Binding SelectedAnimation.SelectedKeyframe}">
                        <ListBox.ContextMenu>
                            <ContextMenu x:Name="AnimationStateContextMenu" ItemsSource="{Binding AnimationStateRightClickItems}" />
                        </ListBox.ContextMenu>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <wpf:FluentIcon>
                                        <wpf:FluentIcon.Style>
                                            <Style BasedOn="{StaticResource FluentIcon.ButtonSize}" TargetType="{x:Type wpf:FluentIcon}">
                                                <Setter Property="Icon" Value="Flag" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding AnimationName, Converter={StaticResource NullToBoolConverter}}" Value="True">
                                                        <Setter Property="Icon" Value="MoviesAndTv" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding StateName, Converter={StaticResource NullToBoolConverter}}" Value="True">
                                                        <Setter Property="Icon" Value="Database" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </wpf:FluentIcon.Style>
                                    </wpf:FluentIcon>
                                    <wpf:FluentIcon
                                        Grid.Column="1"
                                        Icon="Warning"
                                        Style="{StaticResource FluentIcon.ButtonSize}"
                                        Visibility="{Binding UncategorizedIconVisibility}">
                                        <wpf:FluentIcon.ToolTip>
                                            <TextBlock>This state is uncategorized which can cause unexpected results due to only some variables being assigned. Consider using only categorized states.</TextBlock>
                                        </wpf:FluentIcon.ToolTip>
                                    </wpf:FluentIcon>
                                    <Label
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        Content="{Binding DisplayString}"
                                        Foreground="{Binding LabelBrush}" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                    </ListBox>
                </Grid>
            </Border>

            <GridSplitter
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Stretch" />

            <views:StateView
                Grid.Column="4"
                DataContext="{Binding SelectedAnimation.SelectedKeyframe}" />

        </Grid>


    </Grid>
</UserControl>
