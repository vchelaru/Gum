<?xml version="1.0" encoding="utf-8"?>
<ComponentSave xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Name>Elements/PercentBarIcon</Name>
  <BaseType>Container</BaseType>
  <State>
    <Name>Default</Name>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>Background.ColorCategoryState</Name>
      <Value xsi:type="xsd:string">DarkGray</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>StyleCategory</Type>
      <Name>Background.StyleCategoryState</Name>
      <Value xsi:type="xsd:string">Bordered</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>Bar.ColorCategoryState</Name>
      <Value xsi:type="xsd:string">Danger</Value>
      <ExposedAsName>BarColor</ExposedAsName>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>Bar.Parent</Name>
      <Value xsi:type="xsd:string">BarContainer</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>StyleCategory</Type>
      <Name>Bar.StyleCategoryState</Name>
      <Value xsi:type="xsd:string">Solid</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Bar.Width</Name>
      <Value xsi:type="xsd:float">25</Value>
      <ExposedAsName>BarPercent</ExposedAsName>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>Bar.WidthUnits</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>HorizontalAlignment</Type>
      <Name>Bar.XOrigin</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>Bar.XUnits</Name>
      <Value xsi:type="xsd:int">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>BarContainer.ColorCategoryState</Name>
      <Value xsi:type="xsd:string">Black</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>BarContainer.Height</Name>
      <Value xsi:type="xsd:float">-4</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>BarContainer.HeightUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>BarContainer.Parent</Name>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>StyleCategory</Type>
      <Name>BarContainer.StyleCategoryState</Name>
      <Value xsi:type="xsd:string">Solid</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>BarContainer.Width</Name>
      <Value xsi:type="xsd:float">-18</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>BarContainer.WidthUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>BarContainer.X</Name>
      <Value xsi:type="xsd:float">-2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>HorizontalAlignment</Type>
      <Name>BarContainer.XOrigin</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>BarContainer.XUnits</Name>
      <Value xsi:type="xsd:int">4</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>VerticalAlignment</Type>
      <Name>BarContainer.YOrigin</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>BarContainer.YUnits</Name>
      <Value xsi:type="xsd:int">7</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>BarDecorCategory</Type>
      <Name>BarDecorCategoryState</Name>
      <SetsValue>false</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>CautionLinesInstance.Height</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>CautionLinesInstance.HeightUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>int</Type>
      <Name>CautionLinesInstance.LineAlpha</Name>
      <Value xsi:type="xsd:int">50</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>CautionLinesInstance.LineColor</Name>
      <Value xsi:type="xsd:string">Black</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>CautionLinesInstance.Parent</Name>
      <Value xsi:type="xsd:string">Bar</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>CautionLinesInstance.Visible</Name>
      <Value xsi:type="xsd:boolean">false</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>CautionLinesInstance.Width</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>CautionLinesInstance.WidthUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Height</Name>
      <Value xsi:type="xsd:float">16</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>IconInstance.Height</Name>
      <Value xsi:type="xsd:float">-4</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>IconInstance.HeightUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>IconCategory</Type>
      <Name>IconInstance.IconCategoryState</Name>
      <Value xsi:type="xsd:string">Heart</Value>
      <ExposedAsName>BarIcon</ExposedAsName>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>IconInstance.IconColor</Name>
      <Value xsi:type="xsd:string">Danger</Value>
      <ExposedAsName>BarIconColor</ExposedAsName>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>IconInstance.Parent</Name>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>IconInstance.Width</Name>
      <Value xsi:type="xsd:float">100</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>IconInstance.WidthUnits</Name>
      <Value xsi:type="xsd:int">5</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>IconInstance.X</Name>
      <Value xsi:type="xsd:float">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>VerticalAlignment</Type>
      <Name>IconInstance.YOrigin</Name>
      <Value xsi:type="xsd:int">1</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>PositionUnitType</Type>
      <Name>IconInstance.YUnits</Name>
      <Value xsi:type="xsd:int">7</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>IsOverrideInCodeGen</Name>
      <Value xsi:type="xsd:boolean">false</Value>
      <Category>Xamarin Forms</Category>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>IsXamarinFormsControl</Name>
      <Category>Xamarin Forms</Category>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>State</Type>
      <Name>State</Name>
      <Category>States and Visibility</Category>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>VerticalLinesInstance.Height</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>VerticalLinesInstance.HeightUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>int</Type>
      <Name>VerticalLinesInstance.LineAlpha</Name>
      <Value xsi:type="xsd:int">50</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>ColorCategory</Type>
      <Name>VerticalLinesInstance.LineColor</Name>
      <Value xsi:type="xsd:string">Black</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>string</Type>
      <Name>VerticalLinesInstance.Parent</Name>
      <Value xsi:type="xsd:string">Bar</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>bool</Type>
      <Name>VerticalLinesInstance.Visible</Name>
      <Value xsi:type="xsd:boolean">false</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>VerticalLinesInstance.Width</Name>
      <Value xsi:type="xsd:float">0</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>DimensionUnitType</Type>
      <Name>VerticalLinesInstance.WidthUnits</Name>
      <Value xsi:type="xsd:int">2</Value>
      <SetsValue>true</SetsValue>
    </Variable>
    <Variable>
      <Type>float</Type>
      <Name>Width</Name>
      <Value xsi:type="xsd:float">128</Value>
      <SetsValue>true</SetsValue>
    </Variable>
  </State>
  <Category>
    <Name>BarDecorCategory</Name>
    <State>
      <Name>None</Name>
      <Variable>
        <Type>bool</Type>
        <Name>CautionLinesInstance.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>VerticalLinesInstance.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>CautionLines</Name>
      <Variable>
        <Type>bool</Type>
        <Name>CautionLinesInstance.Visible</Name>
        <Value xsi:type="xsd:boolean">true</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>VerticalLinesInstance.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
    <State>
      <Name>VerticalLines</Name>
      <Variable>
        <Type>bool</Type>
        <Name>CautionLinesInstance.Visible</Name>
        <Value xsi:type="xsd:boolean">false</Value>
        <SetsValue>true</SetsValue>
      </Variable>
      <Variable>
        <Type>bool</Type>
        <Name>VerticalLinesInstance.Visible</Name>
        <Value xsi:type="xsd:boolean">true</Value>
        <SetsValue>true</SetsValue>
      </Variable>
    </State>
  </Category>
  <Instance>
    <Name>Background</Name>
    <BaseType>NineSlice</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Instance>
    <Name>IconInstance</Name>
    <BaseType>Elements/Icon</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Instance>
    <Name>BarContainer</Name>
    <BaseType>NineSlice</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Instance>
    <Name>Bar</Name>
    <BaseType>NineSlice</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Instance>
    <Name>CautionLinesInstance</Name>
    <BaseType>Elements/CautionLines</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Instance>
    <Name>VerticalLinesInstance</Name>
    <BaseType>Elements/VerticalLines</BaseType>
    <DefinedByBase>false</DefinedByBase>
  </Instance>
  <Behaviors />
</ComponentSave>