<UserControl
  x:Class="CodeOutputPlugin.Views.CodeWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:WpfDataUi="clr-namespace:WpfDataUi;assembly=WpfDataUi"
  xmlns:converters="clr-namespace:Gum.Converters;assembly=Gum"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:CodeOutputPlugin.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:themes="clr-namespace:Gum.Themes;assembly=Gum"
  xmlns:theming="clr-namespace:FlatRedBall.Glue.Themes;assembly=Gum"
  xmlns:viewModels="clr-namespace:CodeOutputPlugin.ViewModels"
  xmlns:wpf="clr-namespace:FluentIcons.Wpf;assembly=FluentIcons.Wpf"
  d:DataContext="{d:DesignInstance Type={x:Type viewModels:CodeWindowViewModel},
                                   IsDesignTimeCreatable=False}"
  d:DesignHeight="450"
  d:DesignWidth="800"
  mc:Ignorable="d">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <themes:DesignOnlyDictionary Source="pack://application:,,,/Gum;component/Themes/Frb.Styles.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <Style x:Key="ToggleGroupChrome" TargetType="ContentControl">
        <Style.Resources>
          <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Foreground}" />
            <Setter Property="theming:FrbButton.BorderCornerRadius" Value="0" />
            <Setter Property="Margin" Value="2,0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Style.Triggers>

              <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Frb.Brushes.Primary}" />
                <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Foreground}" />
              </Trigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Primary}" />
              </Trigger>
            </Style.Triggers>
          </Style>
        </Style.Resources>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ContentControl">
              <Border
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
                <ContentPresenter />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>
  <Grid>
    <Grid IsSharedSizeScope="True" Visibility="{Binding GenerateCodeUiVisibility}">

      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition />
          <ColumnDefinition Width="0" />
          <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Border BorderBrush="{DynamicResource Frb.Brushes.Contrast01}" BorderThickness="0,0,0,0">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" SharedSizeGroup="HeaderBar" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>


            <TextBlock
              Margin="4,0,0,0"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              Text="Preview" />
            <ContentControl
              Margin="2"
              Padding="0"
              HorizontalAlignment="Right"
              VerticalAlignment="Center"
              Style="{StaticResource ToggleGroupChrome}">
              <StackPanel Orientation="Horizontal">
                <ToggleButton
                  Content="{wpf:FluentIcon Icon=Cube}"
                  IsChecked="{Binding IsSelectedObjectSelected}"
                  ToolTip="Selected Object" />
                <ToggleButton
                  Content="{wpf:FluentIcon Icon=Database}"
                  IsChecked="{Binding IsSelectedStateSelected}"
                  ToolTip="Selected State" />
              </StackPanel>
            </ContentControl>

            <TextBox
              x:Name="TextBoxInstance"
              Grid.Row="1"
              VerticalContentAlignment="Top"
              FontFamily="Consolas"
              ScrollViewer.VerticalScrollBarVisibility="Auto"
              Style="{StaticResource Frb.Styles.Textbox.Readonly}"
              Text="{Binding Code}" />
          </Grid>
        </Border>

        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
        <Border
          Grid.Column="2"
          BorderBrush="{DynamicResource Frb.Brushes.Border}"
          BorderThickness="1,0,0,0">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" SharedSizeGroup="HeaderBar" />
              <RowDefinition Height="*" />
            </Grid.RowDefinitions>



            <TextBlock
              Margin="4,0,0,0"
              VerticalAlignment="Center">
              <TextBlock.Style>
                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                  <Setter Property="Text" Value="Code Generation Setup" />
                  <Setter Property="HorizontalAlignment" Value="Center" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding NeedsSetup}" Value="False">
                      <Setter Property="Text" Value="Code Generation" />
                      <Setter Property="HorizontalAlignment" Value="Left" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>



            <StackPanel
              Grid.Row="0"
              HorizontalAlignment="Right"
              Orientation="Horizontal">
              <StackPanel.Style>
                <Style TargetType="StackPanel">
                  <Setter Property="Visibility" Value="Collapsed" />
                  <Style.Triggers>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CanGenerateCode}" Value="True" />
                        <Condition Binding="{Binding NeedsSetup}" Value="False" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Visibility" Value="Visible" />
                    </MultiDataTrigger>
                  </Style.Triggers>
                </Style>
              </StackPanel.Style>
              <Button
                x:Name="GenerateButton"
                Margin="0,0,8,0"
                Padding="4,1"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Click="HandleGenerateCodeClicked"
                Content="Generate" />

              <ContentControl
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Style="{StaticResource ToggleGroupChrome}">
                <StackPanel Orientation="Horizontal">
                  <ToggleButton
                    Content="{wpf:FluentIcon Icon=Cube}"
                    IsChecked="{Binding IsSelectedOnlyGenerating}"
                    ToolTip="This element only" />
                  <ToggleButton
                    VerticalAlignment="Stretch"
                    Content="{wpf:FluentIcon Icon=CubeMultiple}"
                    IsChecked="{Binding IsAllInProjectGenerating}"
                    ToolTip="All elements in project" />
                </StackPanel>
              </ContentControl>
            </StackPanel>

            <Grid Grid.Row="1" Visibility="{Binding NeedsSetup, Converter={StaticResource BoolToVisibilityConverter}}">
              <UniformGrid Columns="2" Rows="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Button
                  Margin="0,0,8,0"
                  Click="HandleManualSetupClicked"
                  Content="Manual" Padding="8"/>
                <Button Click="HandleAutoSetupClicked" Content="Auto" />
              </UniformGrid>

            </Grid>

            <WpfDataUi:DataUiGrid
              Name="DataGrid"
              Grid.Row="1"
              Grid.ColumnSpan="2"
              Visibility="{Binding NeedsSetup, Converter={StaticResource InverseBoolToVisibilityConverter}}" />


            <!--  Let's not do this ...it's dangerous for now until things stabilize (May 26, 2022)  -->
            <!--<Button Click="HandleGenerateAllCodeClicked">Generate All Code</Button>-->

          </Grid>

        </Border>

      </Grid>
    </Grid>
    <StackPanel Visibility="{Binding ShowNoGenerationAvailableUiVisibility}">
      <TextBlock TextWrapping="Wrap">
        Standard Elements cannot be generated because the Gum NuGet packages linked by your project already include Standard Element runtime classes
      </TextBlock>
    </StackPanel>

  </Grid>
</UserControl>
