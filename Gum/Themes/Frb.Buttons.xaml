<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
  xmlns:themes="clr-namespace:FlatRedBall.Glue.Themes"
  xmlns:wpf="clr-namespace:FluentIcons.Wpf;assembly=FluentIcons.Wpf">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/Gum;component/Themes/Frb.Theming.xaml" />
    <ResourceDictionary Source="pack://application:,,,/Gum;component/Themes/Palette.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <ControlTemplate x:Key="DefaultButtonBaseTemplate" TargetType="{x:Type ButtonBase}">
    <Border
      Padding="{TemplateBinding Padding}"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:FrbButton.BorderCornerRadius)}">
      <ContentPresenter
        x:Name="ContentContainer"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        Content="{TemplateBinding Content}"
        ContentTemplate="{TemplateBinding ContentTemplate}"
        TextElement.FontFamily="{TemplateBinding FontFamily}"
        TextElement.FontSize="{TemplateBinding FontSize}"
        TextElement.Foreground="{TemplateBinding Foreground}">
        <ContentPresenter.Resources>
          <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
          </Style>
        </ContentPresenter.Resources>
      </ContentPresenter>
    </Border>
  </ControlTemplate>

  <ControlTemplate x:Key="IconButtonBaseTemplate" TargetType="{x:Type ButtonBase}">
    <ControlTemplate.Resources>
      <Style TargetType="{x:Type materialDesign:PackIcon}">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
      </Style>
    </ControlTemplate.Resources>
    <Border
      Padding="{TemplateBinding Padding}"
      Background="{TemplateBinding Background}"
      BorderBrush="{TemplateBinding BorderBrush}"
      BorderThickness="{TemplateBinding BorderThickness}"
      CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(themes:FrbButton.BorderCornerRadius)}">
      <ContentPresenter
        x:Name="ContentContainer"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        RenderTransformOrigin="0.5,0.5"
        SnapsToDevicePixels="True"
        TextElement.FontSize="{Binding Body, Source={StaticResource Scale}}" />
    </Border>
  </ControlTemplate>

  <Style x:Key="IconButton" TargetType="{x:Type ButtonBase}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Foreground}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template" Value="{StaticResource IconButtonBaseTemplate}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="themes:FrbButton.BorderCornerRadius" Value="2" />
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.5" />
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{DynamicResource Frb.Brushes.Primary}" />
        <Setter Property="Background" Value="{DynamicResource Darken}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style
    x:Key="IconButton.Inline"
    BasedOn="{StaticResource IconButton}"
    TargetType="{x:Type ButtonBase}">
    <Style.Resources>
      <Style TargetType="{x:Type wpf:FluentIcon}">
        <Setter Property="FontSize" Value="{Binding Source={StaticResource Scale}, Path=IconInline}" />
      </Style>
    </Style.Resources>
  </Style>

</ResourceDictionary>