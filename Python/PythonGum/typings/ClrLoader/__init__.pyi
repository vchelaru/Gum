from __future__ import annotations
import typing
from typing import Any


class ClrLoader(typing.Any):
    def Initialize(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def CreateAppDomain(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetFunction(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def CloseAppDomain(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Close(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class DomainData(typing.Any):
    Domain: typing.Any
    def GetEntryPoint(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Dispose(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class EntryPoint(typing.Any):
    Method: typing.Any
    Target: typing.Any
    def Invoke(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def BeginInvoke(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def EndInvoke(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetObjectData(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetInvocationList(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def DynamicInvoke(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
