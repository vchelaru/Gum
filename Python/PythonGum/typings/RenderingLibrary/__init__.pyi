from __future__ import annotations
import typing
from typing import Any


class ISurfaceInvalidatable(typing.Any):
    def InvalidateSurface(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class ISystemManagers(typing.Any):
    EnableTouchEvents: typing.Any
    Renderer: typing.Any
    Default: typing.Any
    def InvalidateSurface(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class CameraCenterOnScreen(int): ...

class Camera(typing.Any):
    AbsoluteTop: typing.Any
    AbsoluteBottom: typing.Any
    AbsoluteLeft: typing.Any
    AbsoluteRight: typing.Any
    X: typing.Any
    Y: typing.Any
    RenderingXOffset: typing.Any
    RenderingYOffset: typing.Any
    ClientWidth: typing.Any
    ClientHeight: typing.Any
    Zoom: typing.Any
    CameraCenterOnScreen: typing.Any
    def GetTransformationMatrix(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetTransformationMatrix(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ScreenToWorld(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def WorldToScreen(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class IPositionedSizedObject(typing.Any):
    X: typing.Any
    Y: typing.Any
    Z: typing.Any
    Rotation: typing.Any
    FlipHorizontal: typing.Any
    Width: typing.Any
    Height: typing.Any
    Name: typing.Any
    Tag: typing.Any

class IPositionedSizedObjectExtensionMethods(typing.Any):
    def GetRotationMatrix(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteRotationMatrix(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteFlipHorizontal(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteX(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteY(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteLeft(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteTop(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteRight(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteBottom(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteCenterX(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteCenterY(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def HasCursorOver(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetTopParent(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetAbsoluteRotation(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetPosition(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def SetPosition(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
