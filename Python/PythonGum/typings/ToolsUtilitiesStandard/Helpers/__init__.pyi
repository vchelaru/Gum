from __future__ import annotations
import typing
from typing import Any
from enum import IntEnum, IntFlag


class ColorExtensions(typing.Any):
    @staticmethod
    def WithAlpha(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def WithRed(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def WithGreen(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def WithBlue(*args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...

class MathHelper(typing.Any):
    @staticmethod
    def ToRadians(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def ToDegrees(*args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...

class Matrix4x4Extensions(typing.Any):
    @staticmethod
    def Up(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def Down(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def Right(*args: Any, **kwargs: Any) -> Any: ...
    @staticmethod
    def Left(*args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...

class Vector3Extensions(typing.Any):
    @property
    def Up(self) -> Any: ...
    @property
    def Down(self) -> Any: ...
    @property
    def Left(self) -> Any: ...
    @property
    def Right(self) -> Any: ...
    @property
    def Forward(self) -> Any: ...
    @property
    def Backward(self) -> Any: ...
    @staticmethod
    def ToVector2(*args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...
