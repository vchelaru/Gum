from __future__ import annotations
import typing
from typing import Any


class AnimatedStateSave(typing.Any):
    StateName: typing.Any  # property
    Time: typing.Any  # property
    InterpolationType: typing.Any  # property
    Easing: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class AnimationReferenceSave(typing.Any):
    Name: typing.Any  # property
    Time: typing.Any  # property
    SourceObject: typing.Any  # property
    RootName: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class AnimationSave(typing.Any):
    Loops: typing.Any  # property
    Name: typing.Any  # property
    States: typing.Any  # property
    Animations: typing.Any  # property
    Events: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementAnimationReferenceSave(typing.Any):
    AnimationName: typing.Any  # property
    Time: typing.Any  # property
    Loop: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementAnimationsSave(typing.Any):
    Animations: typing.Any  # property
    ElementName: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class NamedEventSave(typing.Any):
    Name: typing.Any  # property
    Time: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
