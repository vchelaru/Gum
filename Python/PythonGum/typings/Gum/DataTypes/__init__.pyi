from __future__ import annotations
import typing
from typing import Any


class ComponentSave(typing.Any):
    DefaultChildContainer: typing.Any  # property
    FileExtension: typing.Any  # property
    Subfolder: typing.Any  # property
    Name: typing.Any  # property
    StrippedName: typing.Any  # property
    BaseType: typing.Any  # property
    FileName: typing.Any  # property
    States: typing.Any  # property
    Categories: typing.Any  # property
    Instances: typing.Any  # property
    Events: typing.Any  # property
    DefaultState: typing.Any  # property
    IsSourceFileMissing: typing.Any  # property
    AllStates: typing.Any  # property
    Behaviors: typing.Any  # property
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetInstance(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class CustomPropertySave(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class CustomPropertySaveListExtensions(typing.Any):
    def ContainsValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Remove(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class DimensionUnitType(int): ...

class HierarchyDependencyType(int): ...

class DimensionUnitTypeExtensions(typing.Any):
    def GetIsPixelBased(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetDependencyType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementType(int): ...

class LinkType(int): ...

class ElementReference(typing.Any):
    ElementType: typing.Any  # property
    LinkType: typing.Any  # property
    Extension: typing.Any  # property
    Subfolder: typing.Any  # property
    Link: typing.Any  # property
    def ToElementSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementSave(typing.Any):
    Name: typing.Any  # property
    StrippedName: typing.Any  # property
    BaseType: typing.Any  # property
    FileName: typing.Any  # property
    States: typing.Any  # property
    Categories: typing.Any  # property
    Instances: typing.Any  # property
    Events: typing.Any  # property
    Subfolder: typing.Any  # property
    FileExtension: typing.Any  # property
    DefaultState: typing.Any  # property
    IsSourceFileMissing: typing.Any  # property
    AllStates: typing.Any  # property
    Behaviors: typing.Any  # property
    def GetInstance(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class EventSave(typing.Any):
    Name: typing.Any  # property
    Enabled: typing.Any  # property
    ExposedAsName: typing.Any  # property
    def GetExposedOrRootName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetRootName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetSourceObject(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class GuideRectangle(typing.Any):
    X: typing.Any  # property
    Y: typing.Any  # property
    Width: typing.Any  # property
    Height: typing.Any  # property
    Name: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class LinkLoadingPreference(int): ...

class GumLoadResult(typing.Any):
    ErrorMessage: typing.Any  # property
    MissingFiles: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class GumProjectSave(typing.Any):
    FontRanges: typing.Any  # property
    FontSpacingVertical: typing.Any  # property
    FontSpacingHorizontal: typing.Any  # property
    Version: typing.Any  # property
    DefaultCanvasWidth: typing.Any  # property
    DefaultCanvasHeight: typing.Any  # property
    ShowOutlines: typing.Any  # property
    ShowCanvasOutline: typing.Any  # property
    ShowRuler: typing.Any  # property
    ShowCheckerBackground: typing.Any  # property
    TextureFilter: typing.Any  # property
    ConvertVariablesOnUnitTypeChange: typing.Any  # property
    RestrictToUnitValues: typing.Any  # property
    RestrictFileNamesForAndroid: typing.Any  # property
    Guides: typing.Any  # property
    ParentProjectRoot: typing.Any  # property
    LocalizationFile: typing.Any  # property
    ShowLocalizationInGum: typing.Any  # property
    CurrentLanguageIndex: typing.Any  # property
    FullFileName: typing.Any  # property
    Screens: typing.Any  # property
    Components: typing.Any  # property
    StandardElements: typing.Any  # property
    Behaviors: typing.Any  # property
    ElementAnimations: typing.Any  # property
    AllElements: typing.Any  # property
    ScreenReferences: typing.Any  # property
    ComponentReferences: typing.Any  # property
    StandardElementReferences: typing.Any  # property
    BehaviorReferences: typing.Any  # property
    SinglePixelTextureFile: typing.Any  # property
    SinglePixelTextureTop: typing.Any  # property
    SinglePixelTextureLeft: typing.Any  # property
    SinglePixelTextureRight: typing.Any  # property
    SinglePixelTextureBottom: typing.Any  # property
    def Load(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Load(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Load(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetScreenSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetComponentSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetStandardElementSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ReloadBehavior(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ReloadElement(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SaveStandardElements(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ReactToRenamed(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class IInstanceContainer(typing.Any):
    Name: typing.Any  # property
    Instances: typing.Any  # property

class InstanceSave(typing.Any):
    Locked: typing.Any  # property
    ParentContainer: typing.Any  # property
    def ShouldSerializeLocked(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class IStateContainer(typing.Any):
    UncategorizedStates: typing.Any  # property
    AllStates: typing.Any  # property
    Categories: typing.Any  # property

class NamedRectangle(typing.Any):
    X: typing.Any  # property
    Y: typing.Any  # property
    Width: typing.Any  # property
    Height: typing.Any  # property
    Name: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ScreenSave(typing.Any):
    FileExtension: typing.Any  # property
    Subfolder: typing.Any  # property
    Name: typing.Any  # property
    StrippedName: typing.Any  # property
    BaseType: typing.Any  # property
    FileName: typing.Any  # property
    States: typing.Any  # property
    Categories: typing.Any  # property
    Instances: typing.Any  # property
    Events: typing.Any  # property
    DefaultState: typing.Any  # property
    IsSourceFileMissing: typing.Any  # property
    AllStates: typing.Any  # property
    Behaviors: typing.Any  # property
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetInstance(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class StandardElementTypes(int): ...

class StandardElementSave(typing.Any):
    FileExtension: typing.Any  # property
    Subfolder: typing.Any  # property
    Name: typing.Any  # property
    StrippedName: typing.Any  # property
    BaseType: typing.Any  # property
    FileName: typing.Any  # property
    States: typing.Any  # property
    Categories: typing.Any  # property
    Instances: typing.Any  # property
    Events: typing.Any  # property
    DefaultState: typing.Any  # property
    IsSourceFileMissing: typing.Any  # property
    AllStates: typing.Any  # property
    Behaviors: typing.Any  # property
    def GetInstance(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class BehaviorSaveExtensionMethods(typing.Any):
    def Initialize(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ComponentSaveExtensionMethods(typing.Any):
    def IsOfType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def InitializeDefaultAndComponentVariables(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableSaveSorter(typing.Any):
    ListOrderToMatch: typing.Any  # property
    def Compare(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IndexOfByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementSaveExtensionMethods(typing.Any):
    def Initialize(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ContainsName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsOfType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetStateSaveRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetStateSaveCategoryRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetStateSaveCategoryRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class InstanceStatePair(typing.Any):
    InstanceSave: typing.Any  # property
    VariableName: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class InstanceSaveExtensionMethods(typing.Any):
    def IsParentASibling(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Initialize(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsComponent(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableFromThisOrBase(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableFromThisOrBase(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableListFromThisOrBase(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValueFromThisOrBase(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsOfType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class GumProjectSaveExtensionMethods(typing.Any):
    def Initialize(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SortElementAndBehaviors(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddNewStandardElementTypes(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveDuplicateVariables(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FixStandardVariables(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class PluginSettingsSave(typing.Any):
    DisabledPlugins: typing.Any  # property
    def Load(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class RecursiveVariableFinder(typing.Any):
    InstanceSave: typing.Any  # property
    ElementStack: typing.Any  # property
    ContainerType: typing.Any  # property
    def GetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableList(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetExposedVariablesForThisInstance(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValueByBottomName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableSaveExtensionMethods(typing.Any):
    def GetPrimitiveType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsEnumeration(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ConvertEnumerationValuesToInts(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FixEnumerations(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetIsFileFromRoot(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetIsFileFromRoot(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableSaveListExtensionMethods(typing.Any):
    def GetVariableSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableListSaveExtensionMethods(typing.Any):
    def GetTypeConverter(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <get_AllStates>d__47(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class GumxVersions(int): ...

class <>c__DisplayClass148_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass149_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass150_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass152_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass153_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <get_AllElements>d__107(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_1(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass2_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass2_1(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass5_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass8_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableContainerType(int): ...

class <>c__DisplayClass21_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass22_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass7_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass8_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass8_1(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
