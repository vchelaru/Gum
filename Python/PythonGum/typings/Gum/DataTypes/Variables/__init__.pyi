from __future__ import annotations
import typing
from typing import Any


class StateSave(typing.Any):
    Name: typing.Any  # property
    Variables: typing.Any  # property
    VariableLists: typing.Any  # property
    ParentContainer: typing.Any  # property
    def Clear(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableListSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryGetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValueOrDefault(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class StateSaveCategory(typing.Any):
    Name: typing.Any  # property
    States: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableListSave(typing.Any):
    Type: typing.Any  # property
    Name: typing.Any  # property
    SourceObject: typing.Any  # property
    Category: typing.Any  # property
    IsFile: typing.Any  # property
    IsHiddenInPropertyGrid: typing.Any  # property
    ValueAsIList: typing.Any  # property
    def GetRootName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def CreateNewList(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableListSave`1(typing.Any):
    ValueAsIList: typing.Any  # property
    Value: typing.Any  # property
    Type: typing.Any  # property
    Name: typing.Any  # property
    SourceObject: typing.Any  # property
    Category: typing.Any  # property
    IsFile: typing.Any  # property
    IsHiddenInPropertyGrid: typing.Any  # property
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def CreateNewList(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetRootName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableSaveValues(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VariableSave(typing.Any):
    IsFile: typing.Any  # property
    IsFont: typing.Any  # property
    Type: typing.Any  # property
    Name: typing.Any  # property
    Value: typing.Any  # property
    SourceObject: typing.Any  # property
    ExposedAsName: typing.Any  # property
    Category: typing.Any  # property
    SetsValue: typing.Any  # property
    IsHiddenInPropertyGrid: typing.Any  # property
    IsCustomVariable: typing.Any  # property
    ExcludedValuesForEnum: typing.Any  # property
    CustomTypeConverter: typing.Any  # property
    CanOnlyBeSetInDefaultState: typing.Any  # property
    ExcludeFromInstances: typing.Any  # property
    DesiredOrder: typing.Any  # property
    PropertiesToSetOnDisplayer: typing.Any  # property
    PreferredDisplayer: typing.Any  # property
    DetailText: typing.Any  # property
    def ShouldSerializeIsFile(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ShouldSerializeIsFont(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetSourceObject(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ShouldSerializeIsHiddenInPropertyGrid(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ShouldSerializeIsCustomVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetRootName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetRootName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class StateSaveExtensionMethods(typing.Any):
    def Initialize(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetValueRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetVariableListRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ConvertEnumerationValuesToInts(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FixEnumerations(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Merge(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def MergeIntoThis(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddIntoThis(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SubtractFromThis(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class StateSaveCategoryExtensions(typing.Any):
    def SetValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ResetAllStates(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass10_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_1(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_2(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_3(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass4_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass5_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass5_1(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
