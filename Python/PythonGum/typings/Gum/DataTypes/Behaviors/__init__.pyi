from __future__ import annotations
import typing
from typing import Any


class BehaviorInstanceSave(typing.Any):
    Behaviors: typing.Any  # property
    Locked: typing.Any  # property
    ParentContainer: typing.Any  # property
    def ShouldSerializeLocked(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class BehaviorReference(typing.Any):
    def ToBehaviorSave(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class BehaviorSave(typing.Any):
    Name: typing.Any  # property
    IsSourceFileMissing: typing.Any  # property
    RequiredVariables: typing.Any  # property
    Categories: typing.Any  # property
    AllStates: typing.Any  # property
    RequiredInstances: typing.Any  # property
    RequiredAnimations: typing.Any  # property
    DefaultImplementation: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Save(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementBehaviorReference(typing.Any):
    ProjectName: typing.Any  # property
    BehaviorName: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
