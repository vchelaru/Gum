from __future__ import annotations
import typing
from typing import Any


class GeneralUnitType(int): ...

class GeneralUnitTypeExtensions(typing.Any):
    def GetIsPixelBased(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Flip(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class XOrY(int): ...

class UnitConverter(typing.Any):
    Self: typing.Any
    def ConvertXPosition(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ConvertYPosition(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ConvertToPixelCoordinates(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ConvertToUnitTypeCoordinates(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def TryConvertToGeneralUnit(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ConvertToGeneralUnit(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ConvertToGeneralUnit(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ConvertToGeneralUnit(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
