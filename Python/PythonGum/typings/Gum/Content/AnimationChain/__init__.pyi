from __future__ import annotations
import typing
from typing import Any


class AnimationChainListSave(typing.Any):
    FileName: typing.Any
    ToRuntimeErrors: typing.Any
    def FromFile(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Dispose(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class AnimationChainSave(typing.Any):
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...

class TextureCoordinateType(int): ...

class TimeMeasurementUnit(int): ...

class AnimationFrameSave(typing.Any):
    def ShouldSerializeFlipHorizontal(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ShouldSerializeFlipVertical(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ShouldSerializeRelativeX(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ShouldSerializeRelativeY(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kwargs: typing.Any) -> typing.Any: ...
