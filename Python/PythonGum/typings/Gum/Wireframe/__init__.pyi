from __future__ import annotations
import typing
from typing import Any


class TagInfo(typing.Any):
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class FoundTag(typing.Any):
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class BbCodeParser(typing.Any):
    def Parse(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddTags(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveTags(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class BindingContextChangedEventArgs(typing.Any):
    OldBindingContext: typing.Any  # property
    NewBindingContext: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class BindableGue(typing.Any):
    BindingContext: typing.Any  # property
    BindingContextBindingPropertyOwner: typing.Any  # property
    BindingContextBinding: typing.Any  # property
    IsFontDirty: typing.Any  # property
    IsLayoutSuspended: typing.Any  # property
    Categories: typing.Any  # property
    StackedRowOrColumnIndex: typing.Any  # property
    StackedRowOrColumnDimensions: typing.Any  # property
    ElementSave: typing.Any  # property
    Managers: typing.Any  # property
    EffectiveManagers: typing.Any  # property
    Visible: typing.Any  # property
    Z: typing.Any  # property
    Layer: typing.Any  # property
    IsRenderTarget: typing.Any  # property
    Alpha: typing.Any  # property
    XUnits: typing.Any  # property
    YUnits: typing.Any  # property
    XOrigin: typing.Any  # property
    YOrigin: typing.Any  # property
    WidthUnits: typing.Any  # property
    HeightUnits: typing.Any  # property
    IgnoredByParentSize: typing.Any  # property
    ChildrenLayout: typing.Any  # property
    AutoGridHorizontalCells: typing.Any  # property
    AutoGridVerticalCells: typing.Any  # property
    TextOverflowVerticalMode: typing.Any  # property
    StackSpacing: typing.Any  # property
    UseFixedStackChildrenSize: typing.Any  # property
    Rotation: typing.Any  # property
    FlipHorizontal: typing.Any  # property
    X: typing.Any  # property
    Y: typing.Any  # property
    MaxWidth: typing.Any  # property
    MinWidth: typing.Any  # property
    Width: typing.Any  # property
    MaxHeight: typing.Any  # property
    MinHeight: typing.Any  # property
    Height: typing.Any  # property
    Parent: typing.Any  # property
    ParentGue: typing.Any  # property
    ElementGueContainingThis: typing.Any  # property
    EffectiveParentGue: typing.Any  # property
    RenderableComponent: typing.Any  # property
    ContainedElements: typing.Any  # property
    Name: typing.Any  # property
    Children: typing.Any  # property
    Tag: typing.Any  # property
    Component: typing.Any  # property
    AbsoluteX: typing.Any  # property
    AbsoluteLeft: typing.Any  # property
    AbsoluteY: typing.Any  # property
    AbsoluteTop: typing.Any  # property
    AbsoluteRight: typing.Any  # property
    AbsoluteBottom: typing.Any  # property
    ExplicitIVisibleParent: typing.Any  # property
    TextureTop: typing.Any  # property
    TextureLeft: typing.Any  # property
    TextureWidth: typing.Any  # property
    TextureHeight: typing.Any  # property
    TextureWidthScale: typing.Any  # property
    TextureHeightScale: typing.Any  # property
    TextureAddress: typing.Any  # property
    Wrap: typing.Any  # property
    WrapsChildren: typing.Any  # property
    ClipsChildren: typing.Any  # property
    Animations: typing.Any  # property
    IsFullyCreated: typing.Any  # property
    UseCustomFont: typing.Any  # property
    CustomFontFile: typing.Any  # property
    Font: typing.Any  # property
    FontSize: typing.Any  # property
    IsItalic: typing.Any  # property
    IsBold: typing.Any  # property
    UseFontSmoothing: typing.Any  # property
    OutlineThickness: typing.Any  # property
    def RemoveFromManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetBinding(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ConvertValue(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateFontRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateToFontValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AnimateSelf(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateTextureValuesFrom(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PlayAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def StopAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetContainedObject(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def CreateChildrenRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateHeight(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateWidth(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetIfDimensionsDependOnChildren(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentOffsets(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Dock(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetDock(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Anchor(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAnchor(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AfterFullCreation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetInitialState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PreRender(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetGueValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddExposedVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsExposedVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def MoveToLayer(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetProperty(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyStateRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddCategory(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddStates(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def InterpolateBetween(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsPointInside(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SuspendLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ClearDirtyLayoutState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ResumeLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddChild(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetGraphicalUiElementByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetGraphicalUiElementByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByNameRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentByNameRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FillListWithChildrenByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FillListWithChildrenByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RefreshTextOverflowVerticalMode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAbsoluteWidth(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAbsoluteHeight(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Render(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class RoutedEventArgs(typing.Any):
    Handled: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class InputEventArgs(typing.Any):
    InputDevice: typing.Any  # property
    Handled: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class SelectionChangedEventArgs(typing.Any):
    RemovedItems: typing.Any  # property
    AddedItems: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class InteractiveGue(typing.Any):
    CurrentGameTime: typing.Any  # property
    CurrentInputReceiver: typing.Any  # property
    HasEvents: typing.Any  # property
    ExposeChildrenEvents: typing.Any  # property
    RaiseChildrenEventsOutsideOfBounds: typing.Any  # property
    IsEnabled: typing.Any  # property
    FormsControlAsObject: typing.Any  # property
    BindingContext: typing.Any  # property
    BindingContextBindingPropertyOwner: typing.Any  # property
    BindingContextBinding: typing.Any  # property
    IsFontDirty: typing.Any  # property
    IsLayoutSuspended: typing.Any  # property
    Categories: typing.Any  # property
    StackedRowOrColumnIndex: typing.Any  # property
    StackedRowOrColumnDimensions: typing.Any  # property
    ElementSave: typing.Any  # property
    Managers: typing.Any  # property
    EffectiveManagers: typing.Any  # property
    Visible: typing.Any  # property
    Z: typing.Any  # property
    Layer: typing.Any  # property
    IsRenderTarget: typing.Any  # property
    Alpha: typing.Any  # property
    XUnits: typing.Any  # property
    YUnits: typing.Any  # property
    XOrigin: typing.Any  # property
    YOrigin: typing.Any  # property
    WidthUnits: typing.Any  # property
    HeightUnits: typing.Any  # property
    IgnoredByParentSize: typing.Any  # property
    ChildrenLayout: typing.Any  # property
    AutoGridHorizontalCells: typing.Any  # property
    AutoGridVerticalCells: typing.Any  # property
    TextOverflowVerticalMode: typing.Any  # property
    StackSpacing: typing.Any  # property
    UseFixedStackChildrenSize: typing.Any  # property
    Rotation: typing.Any  # property
    FlipHorizontal: typing.Any  # property
    X: typing.Any  # property
    Y: typing.Any  # property
    MaxWidth: typing.Any  # property
    MinWidth: typing.Any  # property
    Width: typing.Any  # property
    MaxHeight: typing.Any  # property
    MinHeight: typing.Any  # property
    Height: typing.Any  # property
    Parent: typing.Any  # property
    ParentGue: typing.Any  # property
    ElementGueContainingThis: typing.Any  # property
    EffectiveParentGue: typing.Any  # property
    RenderableComponent: typing.Any  # property
    ContainedElements: typing.Any  # property
    Name: typing.Any  # property
    Children: typing.Any  # property
    Tag: typing.Any  # property
    Component: typing.Any  # property
    AbsoluteX: typing.Any  # property
    AbsoluteLeft: typing.Any  # property
    AbsoluteY: typing.Any  # property
    AbsoluteTop: typing.Any  # property
    AbsoluteRight: typing.Any  # property
    AbsoluteBottom: typing.Any  # property
    ExplicitIVisibleParent: typing.Any  # property
    TextureTop: typing.Any  # property
    TextureLeft: typing.Any  # property
    TextureWidth: typing.Any  # property
    TextureHeight: typing.Any  # property
    TextureWidthScale: typing.Any  # property
    TextureHeightScale: typing.Any  # property
    TextureAddress: typing.Any  # property
    Wrap: typing.Any  # property
    WrapsChildren: typing.Any  # property
    ClipsChildren: typing.Any  # property
    Animations: typing.Any  # property
    IsFullyCreated: typing.Any  # property
    UseCustomFont: typing.Any  # property
    CustomFontFile: typing.Any  # property
    Font: typing.Any  # property
    FontSize: typing.Any  # property
    IsItalic: typing.Any  # property
    IsBold: typing.Any  # property
    UseFontSmoothing: typing.Any  # property
    OutlineThickness: typing.Any  # property
    def CallClick(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallRollOff(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallDragging(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallRemoveAsPushed(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallRollOn(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallRollOver(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallHoverOver(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def TryCallPush(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def HasCursorOver(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsInParentChain(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddNextPushAction(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddNextClickAction(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveFromManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetBinding(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateFontRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateToFontValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AnimateSelf(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateTextureValuesFrom(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PlayAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def StopAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetContainedObject(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def CreateChildrenRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateHeight(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateWidth(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetIfDimensionsDependOnChildren(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentOffsets(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Dock(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetDock(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Anchor(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAnchor(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AfterFullCreation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetInitialState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PreRender(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetGueValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddExposedVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsExposedVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def MoveToLayer(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetProperty(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyStateRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddCategory(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddStates(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def InterpolateBetween(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsPointInside(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SuspendLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ClearDirtyLayoutState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ResumeLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddChild(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetGraphicalUiElementByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetGraphicalUiElementByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByNameRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentByNameRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FillListWithChildrenByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FillListWithChildrenByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RefreshTextOverflowVerticalMode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAbsoluteWidth(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAbsoluteHeight(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Render(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class IInputReceiver(typing.Any):
    ParentInputReceiver: typing.Any  # property
    def OnGainFocus(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def OnLoseFocus(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def OnFocusUpdate(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def OnFocusUpdatePreview(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def DoKeyboardAction(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class InputDevice(int): ...

class Cursors(int): ...

class ICursor(typing.Any):
    CustomCursor: typing.Any  # property
    LastInputDevice: typing.Any  # property
    X: typing.Any  # property
    Y: typing.Any  # property
    LastPrimaryPushTime: typing.Any  # property
    LastPrimaryClickTime: typing.Any  # property
    XChange: typing.Any  # property
    YChange: typing.Any  # property
    ScrollWheelChange: typing.Any  # property
    ZVelocity: typing.Any  # property
    PrimaryPush: typing.Any  # property
    PrimaryDown: typing.Any  # property
    PrimaryClick: typing.Any  # property
    PrimaryClickNoSlide: typing.Any  # property
    PrimaryDoubleClick: typing.Any  # property
    PrimaryDoublePush: typing.Any  # property
    SecondaryPush: typing.Any  # property
    SecondaryDown: typing.Any  # property
    SecondaryClick: typing.Any  # property
    SecondaryDoubleClick: typing.Any  # property
    MiddlePush: typing.Any  # property
    MiddleDown: typing.Any  # property
    MiddleClick: typing.Any  # property
    MiddleDoubleClick: typing.Any  # property
    WindowPushed: typing.Any  # property
    WindowOver: typing.Any  # property
    def XRespectingGumZoomAndBounds(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def YRespectingGumZoomAndBounds(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class IInputReceiverKeyboard(typing.Any):
    IsShiftDown: typing.Any  # property
    IsCtrlDown: typing.Any  # property
    IsAltDown: typing.Any  # property
    def GetStringTyped(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class HandledActions(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class GueInteractiveExtensionMethods(typing.Any):
    def DoUiActivityRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def DoUiActivityRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class MissingFileBehavior(int): ...

class Anchor(int): ...

class Dock(int): ...

class GraphicalUiElement(typing.Any):
    IsFontDirty: typing.Any  # property
    IsLayoutSuspended: typing.Any  # property
    Categories: typing.Any  # property
    StackedRowOrColumnIndex: typing.Any  # property
    StackedRowOrColumnDimensions: typing.Any  # property
    MissingFileBehavior: typing.Any  # property
    ElementSave: typing.Any  # property
    Managers: typing.Any  # property
    EffectiveManagers: typing.Any  # property
    Visible: typing.Any  # property
    CanvasWidth: typing.Any  # property
    CanvasHeight: typing.Any  # property
    Z: typing.Any  # property
    Layer: typing.Any  # property
    IsRenderTarget: typing.Any  # property
    Alpha: typing.Any  # property
    XUnits: typing.Any  # property
    YUnits: typing.Any  # property
    XOrigin: typing.Any  # property
    YOrigin: typing.Any  # property
    WidthUnits: typing.Any  # property
    HeightUnits: typing.Any  # property
    IgnoredByParentSize: typing.Any  # property
    ChildrenLayout: typing.Any  # property
    AutoGridHorizontalCells: typing.Any  # property
    AutoGridVerticalCells: typing.Any  # property
    TextOverflowVerticalMode: typing.Any  # property
    StackSpacing: typing.Any  # property
    UseFixedStackChildrenSize: typing.Any  # property
    Rotation: typing.Any  # property
    FlipHorizontal: typing.Any  # property
    X: typing.Any  # property
    Y: typing.Any  # property
    MaxWidth: typing.Any  # property
    MinWidth: typing.Any  # property
    Width: typing.Any  # property
    MaxHeight: typing.Any  # property
    MinHeight: typing.Any  # property
    Height: typing.Any  # property
    Parent: typing.Any  # property
    ParentGue: typing.Any  # property
    ElementGueContainingThis: typing.Any  # property
    EffectiveParentGue: typing.Any  # property
    RenderableComponent: typing.Any  # property
    ContainedElements: typing.Any  # property
    Name: typing.Any  # property
    Children: typing.Any  # property
    Tag: typing.Any  # property
    Component: typing.Any  # property
    AbsoluteX: typing.Any  # property
    AbsoluteLeft: typing.Any  # property
    AbsoluteY: typing.Any  # property
    AbsoluteTop: typing.Any  # property
    AbsoluteRight: typing.Any  # property
    AbsoluteBottom: typing.Any  # property
    ExplicitIVisibleParent: typing.Any  # property
    TextureTop: typing.Any  # property
    TextureLeft: typing.Any  # property
    TextureWidth: typing.Any  # property
    TextureHeight: typing.Any  # property
    TextureWidthScale: typing.Any  # property
    TextureHeightScale: typing.Any  # property
    TextureAddress: typing.Any  # property
    Wrap: typing.Any  # property
    WrapsChildren: typing.Any  # property
    ClipsChildren: typing.Any  # property
    Animations: typing.Any  # property
    IsFullyCreated: typing.Any  # property
    AreUpdatesAppliedWhenInvisible: typing.Any  # property
    UseCustomFont: typing.Any  # property
    CustomFontFile: typing.Any  # property
    Font: typing.Any  # property
    FontSize: typing.Any  # property
    IsItalic: typing.Any  # property
    IsBold: typing.Any  # property
    UseFontSmoothing: typing.Any  # property
    OutlineThickness: typing.Any  # property
    def UpdateFontRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateToFontValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AnimateSelf(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateTextureValuesFrom(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PlayAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def StopAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetContainedObject(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def CreateChildrenRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Clone(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateHeight(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def UpdateWidth(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetIfDimensionsDependOnChildren(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentOffsets(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Dock(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetDock(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Anchor(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAnchor(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AfterFullCreation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetInitialState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PreRender(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetGueValues(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddExposedVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsExposedVariable(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def MoveToLayer(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveFromManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetPropertyThroughReflection(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SetProperty(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyStateRecursive(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddCategory(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddStates(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def InterpolateBetween(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def IsPointInside(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def SuspendLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ClearDirtyLayoutState(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ResumeLayout(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def AddChild(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetGraphicalUiElementByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetGraphicalUiElementByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByName(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByNameRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetChildByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentByNameRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetParentByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FillListWithChildrenByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def FillListWithChildrenByTypeRecursively(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RefreshTextOverflowVerticalMode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAbsoluteWidth(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAbsoluteHeight(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Render(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class GraphicalUiElementExtensions(typing.Any):
    def ApplyAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ApplyAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PlayAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def PlayAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetAnimation(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class IManagedObject(typing.Any):
    def AddToManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def RemoveFromManagers(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementWithState(typing.Any):
    Element: typing.Any  # property
    StateName: typing.Any  # property
    CategorizedStates: typing.Any  # property
    InstanceName: typing.Any  # property
    StateSave: typing.Any  # property
    AllStates: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ElementWithStateExtensionMethods(typing.Any):
    def Add(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Remove(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class Tag(typing.Any):
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class VmToUiProperty(typing.Any):
    Unassigned: typing.Any  # property
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass37_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass42_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <GetAllBindableDescendants>d__44(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ChildType(int): ...

class DirtyState(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class ParentUpdateType(int): ...

class ParentChangedEventArgs(typing.Any):
    OldValue: typing.Any  # property
    NewValue: typing.Any  # property
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass324_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass380_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass381_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass382_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass383_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass384_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass6_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass21_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <get_AllStates>d__21(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...

class <>c__DisplayClass1_0(typing.Any):
    def Equals(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetHashCode(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def GetType(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
    def ToString(self, *args: typing.Any, **kw: typing.Any) -> typing.Any: ...
