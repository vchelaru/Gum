from __future__ import annotations
import typing
from typing import Any
from enum import IntEnum, IntFlag


class AnimationChainListSave(typing.Any):
    @property
    def FileName(self) -> Any: ...
    @FileName.setter
    def FileName(self, value: Any) -> None: ...
    @property
    def ToRuntimeErrors(self) -> Any: ...
    @staticmethod
    def FromFile(*args: Any, **kwargs: Any) -> Any: ...
    def Dispose(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...

class AnimationChainSave(typing.Any):
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...

class TextureCoordinateType(IntEnum):
    UV = 0
    Pixel = 1

class TimeMeasurementUnit(IntEnum):
    Undefined = 0
    Millisecond = 1
    Second = 2

class AnimationFrameSave(typing.Any):
    def ShouldSerializeFlipHorizontal(self, *args: Any, **kwargs: Any) -> Any: ...
    def ShouldSerializeFlipVertical(self, *args: Any, **kwargs: Any) -> Any: ...
    def ShouldSerializeRelativeX(self, *args: Any, **kwargs: Any) -> Any: ...
    def ShouldSerializeRelativeY(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetType(self, *args: Any, **kwargs: Any) -> Any: ...
    def ToString(self, *args: Any, **kwargs: Any) -> Any: ...
    def Equals(self, *args: Any, **kwargs: Any) -> Any: ...
    def GetHashCode(self, *args: Any, **kwargs: Any) -> Any: ...
